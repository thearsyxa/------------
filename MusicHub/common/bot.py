import logging
import asyncio
import sys
import requests

from aiogram import Bot, Dispatcher, html, F
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart, Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, Message


TOKEN = '7981053598:AAHYs0_g3VQ6B9myCpSiFzoIpjDeoXp244g'

logging.basicConfig(level=logging.INFO)
dp = Dispatcher()
main_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üéµ –°–∫–∞—á–∞—Ç—å —Ç—Ä–µ–∫"), KeyboardButton(text="üí≥ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É")],
        [KeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å"), KeyboardButton(text="üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–µ–º—É")]
    ],
    resize_keyboard=True
)


@dp.message(CommandStart())
async def send_welcome(message):
    starter_text = (
        f"–ü—Ä–∏–≤–µ—Ç, {html.bold(message.from_user.first_name)}!\n"
        "–Ø MusicHub Bot ‚Äî —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é –∫—É–ø–ª–µ–Ω–Ω—ã—Ö —Ç—Ä–µ–∫–æ–≤.\n\n"
        "–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é –∫–æ–º–∞–Ω–¥—É:\n"
        "üéµ –°–∫–∞—á–∞—Ç—å —Ç—Ä–µ–∫\n"
        "üí≥ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É\n"
        "‚ÑπÔ∏è –ü–æ–º–æ—â—å\n"
    )
    await message.answer(starter_text, reply_markup=main_menu)


@dp.message(Command(commands=["help"]))
async def send_help(message):
    help_text = (
        "üîπ /start ‚Äî –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "üîπ /download –ù–∞–∑–≤–∞–Ω–∏–µ_–¢—Ä–µ–∫–∞ ‚Äî –°–∫–∞—á–∞—Ç—å –∫—É–ø–ª–µ–Ω–Ω—ã–π —Ç—Ä–µ–∫\n"
        "üîπ /check_subscription ‚Äî –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É\n"
    )
    await message.answer(help_text)
    
    
@dp.message(F.text)
async def handle_unknown_commands(message: Message):
    await message.answer("‚ùå –ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.")
    

@dp.message(Command(commands=["check_subscription"]))
async def check_subscription(message):
    user_id = message.from_user.id
    response = requests.get(f"http://127.0.0.1:8000/api/check-subscription/{user_id}/")
    data = response.json()
    
    if data['status'] == 'success':
        await message.answer("‚úÖ –£ –≤–∞—Å –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞! –í—ã –º–æ–∂–µ—Ç–µ —Å–∫–∞—á–∏–≤–∞—Ç—å —Ç—Ä–µ–∫–∏.")
    else:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏. –û—Ñ–æ—Ä–º–∏—Ç–µ –µ—ë –Ω–∞ —Å–∞–π—Ç–µ MusicHub.")

@dp.message(Command(commands=["download"]))
async def download_track(message):
    user_id = message.from_user.id
    track_name = message.text.replace("/download ", "").strip()

    response = requests.get(f"http://127.0.0.1:8000/api/check-subscription/{user_id}/{track_name}/")
    data = response.json()

    if data['status'] == 'success':
        await message.answer(f"üéµ –¢–≤–æ–π —Ç—Ä–µ–∫: {track_name}\n–°–∫–∞—á–∏–≤–∞–π —Ç—É—Ç: {data['download_url']}")
    else:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞: {data['message']}")


async def main():
    bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
    await dp.start_polling(bot)

if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO, stream=sys.stdout)
    asyncio.run(main())

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    